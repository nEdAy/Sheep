apply plugin: 'com.android.application'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'jiagu.gradle'
apply from: 'jacoco.gradle'
apply from: 'bugly.gradle'
apply from: 'mob.gradle'

Properties debugSigning = new Properties()
debugSigning.load(new FileInputStream(file(project.property("debug-signing.properties"))))

Properties releaseSigning = new Properties()
releaseSigning.load(new FileInputStream(file(project.property("release-signing.properties"))))

final VERSION_MAJOR = 3
final VERSION_MINOR = 0
final VERSION_PATCH = 0

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "cn.neday.sheep"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 300000
        versionName "3.0.0"
        resConfigs "zh"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file(debugSigning['storeFile'])
            storePassword debugSigning['storePassword']
            keyAlias debugSigning['keyAlias']
            keyPassword debugSigning['keyPassword']
        }
        release {
            storeFile file(releaseSigning['storeFile'])
            storePassword releaseSigning['storePassword']
            keyAlias releaseSigning['keyAlias']
            keyPassword releaseSigning['keyPassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                output.setVersionNameOverride("${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
                output.setVersionCodeOverride(Integer.parseInt(String.valueOf(VERSION_MAJOR) + String.valueOf(VERSION_MINOR).padLeft(2, "0") + String.valueOf(VERSION_PATCH).padLeft(3, "0")))
                // outputFileName = "${variant.name}-${variant.versionName}.apk"
            }
        }
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':base')
    runtimeOnly project(':alibaba')

    kapt 'com.alibaba:arouter-compiler:1.2.2'

    // Unit Test
    testImplementation 'junit:junit:4.12'

    // Android Unit Test
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}